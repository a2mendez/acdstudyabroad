function debounce(fn, delay, immediate) {
    var timeout;
    return function() {
        var context = this
          , args = arguments;
        clearTimeout(timeout),
        immediate && !timeout && fn.apply(context, args),
        timeout = setTimeout(function() {
            timeout = null ,
            immediate || fn.apply(context, args)
        }, delay)
    }
}
!function($) {
    "use strict";
    function Featherlight($content, config) {
        if (!(this instanceof Featherlight)) {
            var fl = new Featherlight($content,config);
            return fl.open(),
            fl
        }
        this.id = Featherlight.id++,
        this.setup($content, config),
        this.chainCallbacks(Featherlight._callbackChain)
    }
    if ("undefined" == typeof $)
        return void ("console"in window && window.console.info("Too much lightness, Featherlight needs jQuery."));
    var opened = []
      , pruneOpened = function(remove) {
        return opened = $.grep(opened, function(fl) {
            return fl !== remove && fl.$instance.closest("body").length > 0
        })
    }
      , structure = function(obj, prefix) {
        var result = {}
          , regex = new RegExp("^" + prefix + "([A-Z])(.*)");
        for (var key in obj) {
            var match = key.match(regex);
            if (match) {
                var dasherized = (match[1] + match[2].replace(/([A-Z])/g, "-$1")).toLowerCase();
                result[dasherized] = obj[key]
            }
        }
        return result
    }
      , eventMap = {
        keyup: "onKeyUp",
        resize: "onResize"
    }
      , globalEventHandler = function(event) {
        $.each(Featherlight.opened().reverse(), function() {
            return event.isDefaultPrevented() || !1 !== this[eventMap[event.type]](event) ? void 0 : (event.preventDefault(),
            event.stopPropagation(),
            !1)
        })
    }
      , toggleGlobalEvents = function(set) {
        if (set !== Featherlight._globalHandlerInstalled) {
            Featherlight._globalHandlerInstalled = set;
            var events = $.map(eventMap, function(_, name) {
                return name + "." + Featherlight.prototype.namespace
            }).join(" ");
            $(window)[set ? "on" : "off"](events, globalEventHandler)
        }
    }
    ;
    Featherlight.prototype = {
        constructor: Featherlight,
        namespace: "featherlight",
        targetAttr: "data-featherlight",
        variant: null ,
        resetCss: !1,
        background: null ,
        openTrigger: "click",
        closeTrigger: "click",
        filter: null ,
        root: "body",
        openSpeed: 250,
        closeSpeed: 250,
        closeOnClick: "background",
        closeOnEsc: !0,
        closeIcon: "&#10005;",
        loading: "",
        otherClose: null ,
        beforeOpen: $.noop,
        beforeContent: $.noop,
        beforeClose: $.noop,
        afterOpen: $.noop,
        afterContent: $.noop,
        afterClose: $.noop,
        onKeyUp: $.noop,
        onResize: $.noop,
        type: null ,
        contentFilters: ["jquery", "image", "html", "ajax", "iframe", "text"],
        setup: function(target, config) {
            "object" != typeof target || target instanceof $ != !1 || config || (config = target,
            target = void 0);
            var self = $.extend(this, config, {
                target: target
            })
              , css = self.resetCss ? self.namespace + "-reset" : self.namespace
              , $background = $(self.background || ['<div class="' + css + "-loading " + css + '">', '<div class="' + css + '-content">', '<span class="' + css + "-close-icon " + self.namespace + '-close">', self.closeIcon, "</span>", '<div class="' + self.namespace + '-inner">' + self.loading + "</div>", "</div>", "</div>"].join(""))
              , closeButtonSelector = "." + self.namespace + "-close" + (self.otherClose ? "," + self.otherClose : "");
            return self.$instance = $background.clone().addClass(self.variant),
            self.$instance.on(self.closeTrigger + "." + self.namespace, function(event) {
                var $target = $(event.target);
                ("background" === self.closeOnClick && $target.is("." + self.namespace) || "anywhere" === self.closeOnClick || $target.closest(closeButtonSelector).length) && (event.preventDefault(),
                self.close())
            }),
            this
        },
        getContent: function() {
            var self = this
              , filters = this.constructor.contentFilters
              , readTargetAttr = function(name) {
                return self.$currentTarget && self.$currentTarget.attr(name)
            }
              , targetValue = readTargetAttr(self.targetAttr)
              , data = self.target || targetValue || ""
              , filter = filters[self.type];
            if (!filter && data in filters && (filter = filters[data],
            data = self.target && targetValue),
            data = data || readTargetAttr("href") || "",
            !filter)
                for (var filterName in filters)
                    self[filterName] && (filter = filters[filterName],
                    data = self[filterName]);
            if (!filter) {
                var target = data;
                if (data = null ,
                $.each(self.contentFilters, function() {
                    return filter = filters[this],
                    filter.test && (data = filter.test(target)),
                    !data && filter.regex && target.match && target.match(filter.regex) && (data = target),
                    !data
                }),
                !data)
                    return "console"in window && window.console.error("Featherlight: no content filter found " + (target ? ' for "' + target + '"' : " (no target specified)")),
                    !1
            }
            return filter.process.call(self, data)
        },
        setContent: function($content) {
            var self = this;
            return ($content.is("iframe") || $("iframe", $content).length > 0) && self.$instance.addClass(self.namespace + "-iframe"),
            self.$instance.removeClass(self.namespace + "-loading"),
            self.$instance.find("." + self.namespace + "-inner").slice(1).remove().end().replaceWith($.contains(self.$instance[0], $content[0]) ? "" : $content),
            self.$content = $content.addClass(self.namespace + "-inner"),
            self
        },
        open: function(event) {
            var self = this;
            if (!(event && event.isDefaultPrevented() || self.beforeOpen(event) === !1)) {
                event && event.preventDefault();
                var $content = self.getContent();
                if ($content)
                    return opened.push(self),
                    toggleGlobalEvents(!0),
                    self.$instance.appendTo(self.root).fadeIn(self.openSpeed),
                    self.beforeContent(event),
                    $.when($content).always(function($content) {
                        self.setContent($content),
                        self.afterContent(event),
                        $.when(self.$instance.promise()).done(function() {
                            self.afterOpen(event)
                        })
                    }),
                    self
            }
            return !1
        },
        close: function(event) {
            var self = this;
            return self.beforeClose(event) === !1 ? !1 : (0 === pruneOpened(self).length && toggleGlobalEvents(!1),
            void self.$instance.fadeOut(self.closeSpeed, function() {
                self.$instance.detach(),
                self.afterClose(event)
            }))
        },
        chainCallbacks: function(chain) {
            for (var name in chain)
                this[name] = $.proxy(chain[name], this, $.proxy(this[name], this))
        }
    },
    $.extend(Featherlight, {
        id: 0,
        autoBind: "[data-featherlight]",
        defaults: Featherlight.prototype,
        contentFilters: {
            jquery: {
                regex: /^[#.]\w/,
                test: function(elem) {
                    return elem instanceof $ && elem
                },
                process: function(elem) {
                    return $(elem).clone(!0)
                }
            },
            image: {
                regex: /\.(png|jpg|jpeg|gif|tiff|bmp)(\?\S*)?$/i,
                process: function(url) {
                    var self = this
                      , deferred = $.Deferred()
                      , img = new Image
                      , $img = $('<img src="' + url + '" alt="" class="' + self.namespace + '-image" />');
                    return img.onload = function() {
                        $img.naturalWidth = img.width,
                        $img.naturalHeight = img.height,
                        deferred.resolve($img)
                    }
                    ,
                    img.onerror = function() {
                        deferred.reject($img)
                    }
                    ,
                    img.src = url,
                    deferred.promise()
                }
            },
            html: {
                regex: /^\s*<[\w!][^<]*>/,
                process: function(html) {
                    return $(html)
                }
            },
            ajax: {
                regex: /./,
                process: function(url) {
                    var deferred = $.Deferred()
                      , $container = $("<div></div>").load(url, function(response, status) {
                        "error" !== status && deferred.resolve($container.contents()),
                        deferred.fail()
                    });
                    return deferred.promise()
                }
            },
            iframe: {
                process: function(url) {
                    var deferred = new $.Deferred
                      , $content = $("<iframe/>").hide().attr("src", url).css(structure(this, "iframe")).on("load", function() {
                        deferred.resolve($content.show())
                    }).appendTo(this.$instance.find("." + this.namespace + "-content"));
                    return deferred.promise()
                }
            },
            text: {
                process: function(text) {
                    return $("<div>", {
                        text: text
                    })
                }
            }
        },
        functionAttributes: ["beforeOpen", "afterOpen", "beforeContent", "afterContent", "beforeClose", "afterClose"],
        readElementConfig: function(element) {
            var Klass = this
              , config = {};
            return element && element.attributes && $.each(element.attributes, function() {
                var match = this.name.match(/^data-featherlight-(.*)/);
                if (match) {
                    var val = this.value
                      , name = $.camelCase(match[1]);
                    if ($.inArray(name, Klass.functionAttributes) >= 0)
                        val = new Function(val);
                    else
                        try {
                            val = $.parseJSON(val)
                        } catch (e) {}
                    config[name] = val
                }
            }),
            config
        },
        extend: function(child, defaults) {
            var Ctor = function() {
                this.constructor = child
            }
            ;
            return Ctor.prototype = this.prototype,
            child.prototype = new Ctor,
            child.__super__ = this.prototype,
            $.extend(child, this, defaults),
            child.defaults = child.prototype,
            child
        },
        attach: function($source, $content, config) {
            var Klass = this;
            "object" != typeof $content || $content instanceof $ != !1 || config || (config = $content,
            $content = void 0),
            config = $.extend({}, config);
            var tempConfig = $.extend({}, Klass.defaults, Klass.readElementConfig($source[0]), config);
            return $source.on(tempConfig.openTrigger + "." + tempConfig.namespace, tempConfig.filter, function(event) {
                var elemConfig = $.extend({
                    $source: $source,
                    $currentTarget: $(this)
                }, Klass.readElementConfig($source[0]), Klass.readElementConfig(this), config);
                new Klass($content,elemConfig).open(event)
            }),
            $source
        },
        current: function() {
            var all = this.opened();
            return all[all.length - 1] || null
        },
        opened: function() {
            var klass = this;
            return pruneOpened(),
            $.grep(opened, function(fl) {
                return fl instanceof klass
            })
        },
        close: function() {
            var cur = this.current();
            cur && cur.close()
        },
        _onReady: function() {
            var Klass = this;
            Klass.autoBind && (Klass.attach($(document), {
                filter: Klass.autoBind
            }),
            $(Klass.autoBind).filter("[data-featherlight-filter]").each(function() {
                Klass.attach($(this))
            }))
        },
        _callbackChain: {
            onKeyUp: function(_super, event) {
                return 27 === event.keyCode ? (this.closeOnEsc && this.$instance.find("." + this.namespace + "-close:first").click(),
                !1) : _super(event)
            },
            onResize: function(_super, event) {
                if (this.$content.naturalWidth) {
                    var w = this.$content.naturalWidth
                      , h = this.$content.naturalHeight;
                    this.$content.css("width", "").css("height", "");
                    var ratio = Math.max(w / parseInt(this.$content.parent().css("width"), 10), h / parseInt(this.$content.parent().css("height"), 10));
                    ratio > 1 && this.$content.css("width", "" + w / ratio + "px").css("height", "" + h / ratio + "px")
                }
                return _super(event)
            },
            afterContent: function(_super, event) {
                var r = _super(event);
                return this.onResize(event),
                r
            }
        }
    }),
    $.featherlight = Featherlight,
    $.fn.featherlight = function($content, config) {
        return Featherlight.attach(this, $content, config)
    }
    ,
    $(document).ready(function() {
        Featherlight._onReady()
    })
}(jQuery),
function($) {
    "use strict";
    $.fn.fitVids = function(options) {
        var settings = {
            customSelector: null ,
            ignore: null
        };
        if (!document.getElementById("fit-vids-style")) {
            var head = document.head || document.getElementsByTagName("head")[0]
              , css = ".fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}"
              , div = document.createElement("div");
            div.innerHTML = '<p>x</p><style id="fit-vids-style">' + css + "</style>",
            head.appendChild(div.childNodes[1])
        }
        return options && $.extend(settings, options),
        this.each(function() {
            var selectors = ['iframe[src*="player.vimeo.com"]', 'iframe[src*="youtube.com"]', 'iframe[src*="youtube-nocookie.com"]', 'iframe[src*="kickstarter.com"][src*="video.html"]', "object", "embed"];
            settings.customSelector && selectors.push(settings.customSelector);
            var ignoreList = ".fitvidsignore";
            settings.ignore && (ignoreList = ignoreList + ", " + settings.ignore);
            var $allVideos = $(this).find(selectors.join(","));
            $allVideos = $allVideos.not("object object"),
            $allVideos = $allVideos.not(ignoreList),
            $allVideos.each(function(count) {
                var $this = $(this);
                if (!($this.parents(ignoreList).length > 0 || "embed" === this.tagName.toLowerCase() && $this.parent("object").length || $this.parent(".fluid-width-video-wrapper").length)) {
                    $this.css("height") || $this.css("width") || !isNaN($this.attr("height")) && !isNaN($this.attr("width")) || ($this.attr("height", 9),
                    $this.attr("width", 16));
                    var height = "object" === this.tagName.toLowerCase() || $this.attr("height") && !isNaN(parseInt($this.attr("height"), 10)) ? parseInt($this.attr("height"), 10) : $this.height()
                      , width = isNaN(parseInt($this.attr("width"), 10)) ? $this.width() : parseInt($this.attr("width"), 10)
                      , aspectRatio = height / width;
                    if (!$this.attr("id")) {
                        var videoID = "fitvid" + count;
                        $this.attr("id", videoID)
                    }
                    $this.wrap('<div class="fluid-width-video-wrapper"></div>').parent(".fluid-width-video-wrapper").css("padding-top", 100 * aspectRatio + "%"),
                    $this.removeAttr("height").removeAttr("width")
                }
            })
        })
    }
}(window.jQuery || window.Zepto),
function($) {
    $.flexslider = function(el, options) {
        var slider = $(el);
        slider.vars = $.extend({}, $.flexslider.defaults, options);
        var watchedEventClearTimer, namespace = slider.vars.namespace, msGesture = window.navigator && window.navigator.msPointerEnabled && window.MSGesture, touch = ("ontouchstart"in window || msGesture || window.DocumentTouch && document instanceof DocumentTouch) && slider.vars.touch, eventType = "click touchend MSPointerUp", watchedEvent = "", vertical = "vertical" === slider.vars.direction, reverse = slider.vars.reverse, carousel = slider.vars.itemWidth > 0, fade = "fade" === slider.vars.animation, asNav = "" !== slider.vars.asNavFor, methods = {}, focused = !0;
        $.data(el, "flexslider", slider),
        methods = {
            init: function() {
                slider.animating = !1,
                slider.currentSlide = parseInt(slider.vars.startAt ? slider.vars.startAt : 0, 10),
                isNaN(slider.currentSlide) && (slider.currentSlide = 0),
                slider.animatingTo = slider.currentSlide,
                slider.atEnd = 0 === slider.currentSlide || slider.currentSlide === slider.last,
                slider.containerSelector = slider.vars.selector.substr(0, slider.vars.selector.search(" ")),
                slider.slides = $(slider.vars.selector, slider),
                slider.container = $(slider.containerSelector, slider),
                slider.count = slider.slides.length,
                slider.syncExists = $(slider.vars.sync).length > 0,
                "slide" === slider.vars.animation && (slider.vars.animation = "swing"),
                slider.prop = vertical ? "top" : "marginLeft",
                slider.args = {},
                slider.manualPause = !1,
                slider.stopped = !1,
                slider.started = !1,
                slider.startTimeout = null ,
                slider.transitions = !slider.vars.video && !fade && slider.vars.useCSS && function() {
                    var obj = document.createElement("div")
                      , props = ["perspectiveProperty", "WebkitPerspective", "MozPerspective", "OPerspective", "msPerspective"];
                    for (var i in props)
                        if (void 0 !== obj.style[props[i]])
                            return slider.pfx = props[i].replace("Perspective", "").toLowerCase(),
                            slider.prop = "-" + slider.pfx + "-transform",
                            !0;
                    return !1
                }(),
                "" !== slider.vars.controlsContainer && (slider.controlsContainer = $(slider.vars.controlsContainer).length > 0 && $(slider.vars.controlsContainer)),
                "" !== slider.vars.manualControls && (slider.manualControls = $(slider.vars.manualControls).length > 0 && $(slider.vars.manualControls)),
                slider.vars.randomize && (slider.slides.sort(function() {
                    return Math.round(Math.random()) - .5
                }),
                slider.container.empty().append(slider.slides)),
                slider.doMath(),
                slider.setup("init"),
                slider.vars.controlNav && methods.controlNav.setup(),
                slider.vars.directionNav && methods.directionNav.setup(),
                slider.vars.keyboard && (1 === $(slider.containerSelector).length || slider.vars.multipleKeyboard) && $(document).bind("keyup", function(event) {
                    var keycode = event.keyCode;
                    if (!slider.animating && (39 === keycode || 37 === keycode)) {
                        var target = 39 === keycode ? slider.getTarget("next") : 37 === keycode ? slider.getTarget("prev") : !1;
                        slider.flexAnimate(target, slider.vars.pauseOnAction)
                    }
                }),
                slider.vars.mousewheel && slider.bind("mousewheel", function(event, delta) {
                    event.preventDefault();
                    var target = slider.getTarget(0 > delta ? "next" : "prev");
                    slider.flexAnimate(target, slider.vars.pauseOnAction)
                }),
                slider.vars.pausePlay && methods.pausePlay.setup(),
                slider.vars.slideshow && slider.vars.pauseInvisible && methods.pauseInvisible.init(),
                slider.vars.slideshow && (slider.vars.pauseOnHover && slider.hover(function() {
                    slider.manualPlay || slider.manualPause || slider.pause()
                }, function() {
                    slider.manualPause || slider.manualPlay || slider.stopped || slider.play()
                }),
                slider.vars.pauseInvisible && methods.pauseInvisible.isHidden() || (slider.vars.initDelay > 0 ? slider.startTimeout = setTimeout(slider.play, slider.vars.initDelay) : slider.play())),
                asNav && methods.asNav.setup(),
                touch && slider.vars.touch && methods.touch(),
                (!fade || fade && slider.vars.smoothHeight) && $(window).bind("resize orientationchange focus", methods.resize),
                slider.find("img").attr("draggable", "false"),
                setTimeout(function() {
                    slider.vars.start(slider)
                }, 200)
            },
            asNav: {
                setup: function() {
                    slider.asNav = !0,
                    slider.animatingTo = Math.floor(slider.currentSlide / slider.move),
                    slider.currentItem = slider.currentSlide,
                    slider.slides.removeClass(namespace + "active-slide").eq(slider.currentItem).addClass(namespace + "active-slide"),
                    msGesture ? (el._slider = slider,
                    slider.slides.each(function() {
                        var that = this;
                        that._gesture = new MSGesture,
                        that._gesture.target = that,
                        that.addEventListener("MSPointerDown", function(e) {
                            e.preventDefault(),
                            e.currentTarget._gesture && e.currentTarget._gesture.addPointer(e.pointerId)
                        }, !1),
                        that.addEventListener("MSGestureTap", function(e) {
                            e.preventDefault();
                            var $slide = $(this)
                              , target = $slide.index();
                            $(slider.vars.asNavFor).data("flexslider").animating || $slide.hasClass("active") || (slider.direction = slider.currentItem < target ? "next" : "prev",
                            slider.flexAnimate(target, slider.vars.pauseOnAction, !1, !0, !0))
                        })
                    })) : slider.slides.on(eventType, function(e) {
                        e.preventDefault();
                        var $slide = $(this)
                          , target = $slide.index()
                          , posFromLeft = $slide.offset().left - $(slider).scrollLeft();
                        0 >= posFromLeft && $slide.hasClass(namespace + "active-slide") ? slider.flexAnimate(slider.getTarget("prev"), !0) : $(slider.vars.asNavFor).data("flexslider").animating || $slide.hasClass(namespace + "active-slide") || (slider.direction = slider.currentItem < target ? "next" : "prev",
                        slider.flexAnimate(target, slider.vars.pauseOnAction, !1, !0, !0))
                    })
                }
            },
            controlNav: {
                setup: function() {
                    slider.manualControls ? methods.controlNav.setupManual() : methods.controlNav.setupPaging()
                },
                setupPaging: function() {
                    var item, slide, type = "thumbnails" === slider.vars.controlNav ? "control-thumbs" : "control-paging", j = 1;
                    if (slider.controlNavScaffold = $('<ol class="' + namespace + "control-nav " + namespace + type + '"></ol>'),
                    slider.pagingCount > 1)
                        for (var i = 0; i < slider.pagingCount; i++) {
                            if (slide = slider.slides.eq(i),
                            item = "thumbnails" === slider.vars.controlNav ? '<img src="' + slide.attr("data-thumb") + '"/>' : "<a>" + j + "</a>",
                            "thumbnails" === slider.vars.controlNav && !0 === slider.vars.thumbCaptions) {
                                var captn = slide.attr("data-thumbcaption");
                                "" != captn && void 0 != captn && (item += '<span class="' + namespace + 'caption">' + captn + "</span>")
                            }
                            slider.controlNavScaffold.append("<li>" + item + "</li>"),
                            j++
                        }
                    slider.controlsContainer ? $(slider.controlsContainer).append(slider.controlNavScaffold) : slider.append(slider.controlNavScaffold),
                    methods.controlNav.set(),
                    methods.controlNav.active(),
                    slider.controlNavScaffold.delegate("a, img", eventType, function(event) {
                        if (event.preventDefault(),
                        "" === watchedEvent || watchedEvent === event.type) {
                            var $this = $(this)
                              , target = slider.controlNav.index($this);
                            $this.hasClass(namespace + "active") || (slider.direction = target > slider.currentSlide ? "next" : "prev",
                            slider.flexAnimate(target, slider.vars.pauseOnAction))
                        }
                        "" === watchedEvent && (watchedEvent = event.type),
                        methods.setToClearWatchedEvent()
                    })
                },
                setupManual: function() {
                    slider.controlNav = slider.manualControls,
                    methods.controlNav.active(),
                    slider.controlNav.bind(eventType, function(event) {
                        if (event.preventDefault(),
                        "" === watchedEvent || watchedEvent === event.type) {
                            var $this = $(this)
                              , target = slider.controlNav.index($this);
                            $this.hasClass(namespace + "active") || (slider.direction = target > slider.currentSlide ? "next" : "prev",
                            slider.flexAnimate(target, slider.vars.pauseOnAction))
                        }
                        "" === watchedEvent && (watchedEvent = event.type),
                        methods.setToClearWatchedEvent()
                    })
                },
                set: function() {
                    var selector = "thumbnails" === slider.vars.controlNav ? "img" : "a";
                    slider.controlNav = $("." + namespace + "control-nav li " + selector, slider.controlsContainer ? slider.controlsContainer : slider)
                },
                active: function() {
                    slider.controlNav.removeClass(namespace + "active").eq(slider.animatingTo).addClass(namespace + "active")
                },
                update: function(action, pos) {
                    slider.pagingCount > 1 && "add" === action ? slider.controlNavScaffold.append($("<li><a>" + slider.count + "</a></li>")) : 1 === slider.pagingCount ? slider.controlNavScaffold.find("li").remove() : slider.controlNav.eq(pos).closest("li").remove(),
                    methods.controlNav.set(),
                    slider.pagingCount > 1 && slider.pagingCount !== slider.controlNav.length ? slider.update(pos, action) : methods.controlNav.active()
                }
            },
            directionNav: {
                setup: function() {
                    var directionNavScaffold = $('<ul class="' + namespace + 'direction-nav"><li><a class="' + namespace + 'prev" href="#">' + slider.vars.prevText + '</a></li><li><a class="' + namespace + 'next" href="#">' + slider.vars.nextText + "</a></li></ul>");
                    slider.controlsContainer ? ($(slider.controlsContainer).append(directionNavScaffold),
                    slider.directionNav = $("." + namespace + "direction-nav li a", slider.controlsContainer)) : (slider.append(directionNavScaffold),
                    slider.directionNav = $("." + namespace + "direction-nav li a", slider)),
                    methods.directionNav.update(),
                    slider.directionNav.bind(eventType, function(event) {
                        event.preventDefault();
                        var target;
                        ("" === watchedEvent || watchedEvent === event.type) && (target = slider.getTarget($(this).hasClass(namespace + "next") ? "next" : "prev"),
                        slider.flexAnimate(target, slider.vars.pauseOnAction)),
                        "" === watchedEvent && (watchedEvent = event.type),
                        methods.setToClearWatchedEvent()
                    })
                },
                update: function() {
                    var disabledClass = namespace + "disabled";
                    1 === slider.pagingCount ? slider.directionNav.addClass(disabledClass).attr("tabindex", "-1") : slider.vars.animationLoop ? slider.directionNav.removeClass(disabledClass).removeAttr("tabindex") : 0 === slider.animatingTo ? slider.directionNav.removeClass(disabledClass).filter("." + namespace + "prev").addClass(disabledClass).attr("tabindex", "-1") : slider.animatingTo === slider.last ? slider.directionNav.removeClass(disabledClass).filter("." + namespace + "next").addClass(disabledClass).attr("tabindex", "-1") : slider.directionNav.removeClass(disabledClass).removeAttr("tabindex")
                }
            },
            pausePlay: {
                setup: function() {
                    var pausePlayScaffold = $('<div class="' + namespace + 'pauseplay"><a></a></div>');
                    slider.controlsContainer ? (slider.controlsContainer.append(pausePlayScaffold),
                    slider.pausePlay = $("." + namespace + "pauseplay a", slider.controlsContainer)) : (slider.append(pausePlayScaffold),
                    slider.pausePlay = $("." + namespace + "pauseplay a", slider)),
                    methods.pausePlay.update(slider.vars.slideshow ? namespace + "pause" : namespace + "play"),
                    slider.pausePlay.bind(eventType, function(event) {
                        event.preventDefault(),
                        ("" === watchedEvent || watchedEvent === event.type) && ($(this).hasClass(namespace + "pause") ? (slider.manualPause = !0,
                        slider.manualPlay = !1,
                        slider.pause()) : (slider.manualPause = !1,
                        slider.manualPlay = !0,
                        slider.play())),
                        "" === watchedEvent && (watchedEvent = event.type),
                        methods.setToClearWatchedEvent()
                    })
                },
                update: function(state) {
                    "play" === state ? slider.pausePlay.removeClass(namespace + "pause").addClass(namespace + "play").html(slider.vars.playText) : slider.pausePlay.removeClass(namespace + "play").addClass(namespace + "pause").html(slider.vars.pauseText)
                }
            },
            touch: function() {
                function onTouchStart(e) {
                    slider.animating ? e.preventDefault() : (window.navigator.msPointerEnabled || 1 === e.touches.length) && (slider.pause(),
                    cwidth = vertical ? slider.h : slider.w,
                    startT = Number(new Date),
                    localX = e.touches[0].pageX,
                    localY = e.touches[0].pageY,
                    offset = carousel && reverse && slider.animatingTo === slider.last ? 0 : carousel && reverse ? slider.limit - (slider.itemW + slider.vars.itemMargin) * slider.move * slider.animatingTo : carousel && slider.currentSlide === slider.last ? slider.limit : carousel ? (slider.itemW + slider.vars.itemMargin) * slider.move * slider.currentSlide : reverse ? (slider.last - slider.currentSlide + slider.cloneOffset) * cwidth : (slider.currentSlide + slider.cloneOffset) * cwidth,
                    startX = vertical ? localY : localX,
                    startY = vertical ? localX : localY,
                    el.addEventListener("touchmove", onTouchMove, !1),
                    el.addEventListener("touchend", onTouchEnd, !1))
                }
                function onTouchMove(e) {
                    localX = e.touches[0].pageX,
                    localY = e.touches[0].pageY,
                    dx = vertical ? startX - localY : startX - localX,
                    scrolling = vertical ? Math.abs(dx) < Math.abs(localX - startY) : Math.abs(dx) < Math.abs(localY - startY);
                    var fxms = 500;
                    (!scrolling || Number(new Date) - startT > fxms) && (e.preventDefault(),
                    !fade && slider.transitions && (slider.vars.animationLoop || (dx /= 0 === slider.currentSlide && 0 > dx || slider.currentSlide === slider.last && dx > 0 ? Math.abs(dx) / cwidth + 2 : 1),
                    slider.setProps(offset + dx, "setTouch")))
                }
                function onTouchEnd() {
                    if (el.removeEventListener("touchmove", onTouchMove, !1),
                    slider.animatingTo === slider.currentSlide && !scrolling && null !== dx) {
                        var updateDx = reverse ? -dx : dx
                          , target = slider.getTarget(updateDx > 0 ? "next" : "prev");
                        slider.canAdvance(target) && (Number(new Date) - startT < 550 && Math.abs(updateDx) > 50 || Math.abs(updateDx) > cwidth / 2) ? slider.flexAnimate(target, slider.vars.pauseOnAction) : fade || slider.flexAnimate(slider.currentSlide, slider.vars.pauseOnAction, !0)
                    }
                    el.removeEventListener("touchend", onTouchEnd, !1),
                    startX = null ,
                    startY = null ,
                    dx = null ,
                    offset = null
                }
                function onMSPointerDown(e) {
                    e.stopPropagation(),
                    slider.animating ? e.preventDefault() : (slider.pause(),
                    el._gesture.addPointer(e.pointerId),
                    accDx = 0,
                    cwidth = vertical ? slider.h : slider.w,
                    startT = Number(new Date),
                    offset = carousel && reverse && slider.animatingTo === slider.last ? 0 : carousel && reverse ? slider.limit - (slider.itemW + slider.vars.itemMargin) * slider.move * slider.animatingTo : carousel && slider.currentSlide === slider.last ? slider.limit : carousel ? (slider.itemW + slider.vars.itemMargin) * slider.move * slider.currentSlide : reverse ? (slider.last - slider.currentSlide + slider.cloneOffset) * cwidth : (slider.currentSlide + slider.cloneOffset) * cwidth)
                }
                function onMSGestureChange(e) {
                    e.stopPropagation();
                    var slider = e.target._slider;
                    if (slider) {
                        var transX = -e.translationX
                          , transY = -e.translationY;
                        return accDx += vertical ? transY : transX,
                        dx = accDx,
                        scrolling = vertical ? Math.abs(accDx) < Math.abs(-transX) : Math.abs(accDx) < Math.abs(-transY),
                        e.detail === e.MSGESTURE_FLAG_INERTIA ? void setImmediate(function() {
                            el._gesture.stop()
                        }) : void ((!scrolling || Number(new Date) - startT > 500) && (e.preventDefault(),
                        !fade && slider.transitions && (slider.vars.animationLoop || (dx = accDx / (0 === slider.currentSlide && 0 > accDx || slider.currentSlide === slider.last && accDx > 0 ? Math.abs(accDx) / cwidth + 2 : 1)),
                        slider.setProps(offset + dx, "setTouch"))))
                    }
                }
                function onMSGestureEnd(e) {
                    e.stopPropagation();
                    var slider = e.target._slider;
                    if (slider) {
                        if (slider.animatingTo === slider.currentSlide && !scrolling && null !== dx) {
                            var updateDx = reverse ? -dx : dx
                              , target = slider.getTarget(updateDx > 0 ? "next" : "prev");
                            slider.canAdvance(target) && (Number(new Date) - startT < 550 && Math.abs(updateDx) > 50 || Math.abs(updateDx) > cwidth / 2) ? slider.flexAnimate(target, slider.vars.pauseOnAction) : fade || slider.flexAnimate(slider.currentSlide, slider.vars.pauseOnAction, !0)
                        }
                        startX = null ,
                        startY = null ,
                        dx = null ,
                        offset = null ,
                        accDx = 0
                    }
                }
                var startX, startY, offset, cwidth, dx, startT, scrolling = !1, localX = 0, localY = 0, accDx = 0;
                msGesture ? (el.style.msTouchAction = "none",
                el._gesture = new MSGesture,
                el._gesture.target = el,
                el.addEventListener("MSPointerDown", onMSPointerDown, !1),
                el._slider = slider,
                el.addEventListener("MSGestureChange", onMSGestureChange, !1),
                el.addEventListener("MSGestureEnd", onMSGestureEnd, !1)) : el.addEventListener("touchstart", onTouchStart, !1)
            },
            resize: function() {
                !slider.animating && slider.is(":visible") && (carousel || slider.doMath(),
                fade ? methods.smoothHeight() : carousel ? (slider.slides.width(slider.computedW),
                slider.update(slider.pagingCount),
                slider.setProps()) : vertical ? (slider.viewport.height(slider.h),
                slider.setProps(slider.h, "setTotal")) : (slider.vars.smoothHeight && methods.smoothHeight(),
                slider.newSlides.width(slider.computedW),
                slider.setProps(slider.computedW, "setTotal")))
            },
            smoothHeight: function(dur) {
                if (!vertical || fade) {
                    var $obj = fade ? slider : slider.viewport;
                    dur ? $obj.animate({
                        height: slider.slides.eq(slider.animatingTo).height()
                    }, dur) : $obj.height(slider.slides.eq(slider.animatingTo).height())
                }
            },
            sync: function(action) {
                var $obj = $(slider.vars.sync).data("flexslider")
                  , target = slider.animatingTo;
                switch (action) {
                case "animate":
                    $obj.flexAnimate(target, slider.vars.pauseOnAction, !1, !0);
                    break;
                case "play":
                    $obj.playing || $obj.asNav || $obj.play();
                    break;
                case "pause":
                    $obj.pause()
                }
            },
            uniqueID: function($clone) {
                return $clone.find("[id]").each(function() {
                    var $this = $(this);
                    $this.attr("id", $this.attr("id") + "_clone")
                }),
                $clone
            },
            pauseInvisible: {
                visProp: null ,
                init: function() {
                    var prefixes = ["webkit", "moz", "ms", "o"];
                    if ("hidden"in document)
                        return "hidden";
                    for (var i = 0; i < prefixes.length; i++)
                        prefixes[i] + "Hidden"in document && (methods.pauseInvisible.visProp = prefixes[i] + "Hidden");
                    if (methods.pauseInvisible.visProp) {
                        var evtname = methods.pauseInvisible.visProp.replace(/[H|h]idden/, "") + "visibilitychange";
                        document.addEventListener(evtname, function() {
                            methods.pauseInvisible.isHidden() ? slider.startTimeout ? clearTimeout(slider.startTimeout) : slider.pause() : slider.started ? slider.play() : slider.vars.initDelay > 0 ? setTimeout(slider.play, slider.vars.initDelay) : slider.play()
                        })
                    }
                },
                isHidden: function() {
                    return document[methods.pauseInvisible.visProp] || !1
                }
            },
            setToClearWatchedEvent: function() {
                clearTimeout(watchedEventClearTimer),
                watchedEventClearTimer = setTimeout(function() {
                    watchedEvent = ""
                }, 3e3)
            }
        },
        slider.flexAnimate = function(target, pause, override, withSync, fromNav) {
            if (slider.vars.animationLoop || target === slider.currentSlide || (slider.direction = target > slider.currentSlide ? "next" : "prev"),
            asNav && 1 === slider.pagingCount && (slider.direction = slider.currentItem < target ? "next" : "prev"),
            !slider.animating && (slider.canAdvance(target, fromNav) || override) && slider.is(":visible")) {
                if (asNav && withSync) {
                    var master = $(slider.vars.asNavFor).data("flexslider");
                    if (slider.atEnd = 0 === target || target === slider.count - 1,
                    master.flexAnimate(target, !0, !1, !0, fromNav),
                    slider.direction = slider.currentItem < target ? "next" : "prev",
                    master.direction = slider.direction,
                    Math.ceil((target + 1) / slider.visible) - 1 === slider.currentSlide || 0 === target)
                        return slider.currentItem = target,
                        slider.slides.removeClass(namespace + "active-slide").eq(target).addClass(namespace + "active-slide"),
                        !1;
                    slider.currentItem = target,
                    slider.slides.removeClass(namespace + "active-slide").eq(target).addClass(namespace + "active-slide"),
                    target = Math.floor(target / slider.visible)
                }
                if (slider.animating = !0,
                slider.animatingTo = target,
                pause && slider.pause(),
                slider.vars.before(slider),
                slider.syncExists && !fromNav && methods.sync("animate"),
                slider.vars.controlNav && methods.controlNav.active(),
                carousel || slider.slides.removeClass(namespace + "active-slide").eq(target).addClass(namespace + "active-slide"),
                slider.atEnd = 0 === target || target === slider.last,
                slider.vars.directionNav && methods.directionNav.update(),
                target === slider.last && (slider.vars.end(slider),
                slider.vars.animationLoop || slider.pause()),
                fade)
                    touch ? (slider.slides.eq(slider.currentSlide).css({
                        opacity: 0,
                        zIndex: 1
                    }),
                    slider.slides.eq(target).css({
                        opacity: 1,
                        zIndex: 2
                    }),
                    slider.wrapup(dimension)) : (slider.slides.eq(slider.currentSlide).css({
                        zIndex: 1
                    }).animate({
                        opacity: 0
                    }, slider.vars.animationSpeed, slider.vars.easing),
                    slider.slides.eq(target).css({
                        zIndex: 2
                    }).animate({
                        opacity: 1
                    }, slider.vars.animationSpeed, slider.vars.easing, slider.wrapup));
                else {
                    var margin, slideString, calcNext, dimension = vertical ? slider.slides.filter(":first").height() : slider.computedW;
                    carousel ? (margin = slider.vars.itemMargin,
                    calcNext = (slider.itemW + margin) * slider.move * slider.animatingTo,
                    slideString = calcNext > slider.limit && 1 !== slider.visible ? slider.limit : calcNext) : slideString = 0 === slider.currentSlide && target === slider.count - 1 && slider.vars.animationLoop && "next" !== slider.direction ? reverse ? (slider.count + slider.cloneOffset) * dimension : 0 : slider.currentSlide === slider.last && 0 === target && slider.vars.animationLoop && "prev" !== slider.direction ? reverse ? 0 : (slider.count + 1) * dimension : reverse ? (slider.count - 1 - target + slider.cloneOffset) * dimension : (target + slider.cloneOffset) * dimension,
                    slider.setProps(slideString, "", slider.vars.animationSpeed),
                    slider.transitions ? (slider.vars.animationLoop && slider.atEnd || (slider.animating = !1,
                    slider.currentSlide = slider.animatingTo),
                    slider.container.unbind("webkitTransitionEnd transitionend"),
                    slider.container.bind("webkitTransitionEnd transitionend", function() {
                        slider.wrapup(dimension)
                    })) : slider.container.animate(slider.args, slider.vars.animationSpeed, slider.vars.easing, function() {
                        slider.wrapup(dimension)
                    })
                }
                slider.vars.smoothHeight && methods.smoothHeight(slider.vars.animationSpeed)
            }
        }
        ,
        slider.wrapup = function(dimension) {
            fade || carousel || (0 === slider.currentSlide && slider.animatingTo === slider.last && slider.vars.animationLoop ? slider.setProps(dimension, "jumpEnd") : slider.currentSlide === slider.last && 0 === slider.animatingTo && slider.vars.animationLoop && slider.setProps(dimension, "jumpStart")),
            slider.animating = !1,
            slider.currentSlide = slider.animatingTo,
            slider.vars.after(slider)
        }
        ,
        slider.animateSlides = function() {
            !slider.animating && focused && slider.flexAnimate(slider.getTarget("next"))
        }
        ,
        slider.pause = function() {
            clearInterval(slider.animatedSlides),
            slider.animatedSlides = null ,
            slider.playing = !1,
            slider.vars.pausePlay && methods.pausePlay.update("play"),
            slider.syncExists && methods.sync("pause")
        }
        ,
        slider.play = function() {
            slider.playing && clearInterval(slider.animatedSlides),
            slider.animatedSlides = slider.animatedSlides || setInterval(slider.animateSlides, slider.vars.slideshowSpeed),
            slider.started = slider.playing = !0,
            slider.vars.pausePlay && methods.pausePlay.update("pause"),
            slider.syncExists && methods.sync("play")
        }
        ,
        slider.stop = function() {
            slider.pause(),
            slider.stopped = !0
        }
        ,
        slider.canAdvance = function(target, fromNav) {
            var last = asNav ? slider.pagingCount - 1 : slider.last;
            return fromNav ? !0 : asNav && slider.currentItem === slider.count - 1 && 0 === target && "prev" === slider.direction ? !0 : asNav && 0 === slider.currentItem && target === slider.pagingCount - 1 && "next" !== slider.direction ? !1 : target !== slider.currentSlide || asNav ? slider.vars.animationLoop ? !0 : slider.atEnd && 0 === slider.currentSlide && target === last && "next" !== slider.direction ? !1 : slider.atEnd && slider.currentSlide === last && 0 === target && "next" === slider.direction ? !1 : !0 : !1
        }
        ,
        slider.getTarget = function(dir) {
            return slider.direction = dir,
            "next" === dir ? slider.currentSlide === slider.last ? 0 : slider.currentSlide + 1 : 0 === slider.currentSlide ? slider.last : slider.currentSlide - 1
        }
        ,
        slider.setProps = function(pos, special, dur) {
            var target = function() {
                var posCheck = pos ? pos : (slider.itemW + slider.vars.itemMargin) * slider.move * slider.animatingTo
                  , posCalc = function() {
                    if (carousel)
                        return "setTouch" === special ? pos : reverse && slider.animatingTo === slider.last ? 0 : reverse ? slider.limit - (slider.itemW + slider.vars.itemMargin) * slider.move * slider.animatingTo : slider.animatingTo === slider.last ? slider.limit : posCheck;
                    switch (special) {
                    case "setTotal":
                        return reverse ? (slider.count - 1 - slider.currentSlide + slider.cloneOffset) * pos : (slider.currentSlide + slider.cloneOffset) * pos;
                    case "setTouch":
                        return reverse ? pos : pos;
                    case "jumpEnd":
                        return reverse ? pos : slider.count * pos;
                    case "jumpStart":
                        return reverse ? slider.count * pos : pos;
                    default:
                        return pos
                    }
                }();
                return -1 * posCalc + "px"
            }();
            slider.transitions && (target = vertical ? "translate3d(0," + target + ",0)" : "translate3d(" + target + ",0,0)",
            dur = void 0 !== dur ? dur / 1e3 + "s" : "0s",
            slider.container.css("-" + slider.pfx + "-transition-duration", dur),
            slider.container.css("transition-duration", dur)),
            slider.args[slider.prop] = target,
            (slider.transitions || void 0 === dur) && slider.container.css(slider.args),
            slider.container.css("transform", target)
        }
        ,
        slider.setup = function(type) {
            if (fade)
                slider.slides.css({
                    width: "100%",
                    "float": "left",
                    marginRight: "-100%",
                    position: "relative"
                }),
                "init" === type && (touch ? slider.slides.css({
                    opacity: 0,
                    display: "block",
                    webkitTransition: "opacity " + slider.vars.animationSpeed / 1e3 + "s ease",
                    zIndex: 1
                }).eq(slider.currentSlide).css({
                    opacity: 1,
                    zIndex: 2
                }) : slider.slides.css({
                    opacity: 0,
                    display: "block",
                    zIndex: 1
                }).eq(slider.currentSlide).css({
                    zIndex: 2
                }).animate({
                    opacity: 1
                }, slider.vars.animationSpeed, slider.vars.easing)),
                slider.vars.smoothHeight && methods.smoothHeight();
            else {
                var sliderOffset, arr;
                "init" === type && (slider.viewport = $('<div class="' + namespace + 'viewport"></div>').css({
                    overflow: "hidden",
                    position: "relative"
                }).appendTo(slider).append(slider.container),
                slider.cloneCount = 0,
                slider.cloneOffset = 0,
                reverse && (arr = $.makeArray(slider.slides).reverse(),
                slider.slides = $(arr),
                slider.container.empty().append(slider.slides))),
                slider.vars.animationLoop && !carousel && (slider.cloneCount = 2,
                slider.cloneOffset = 1,
                "init" !== type && slider.container.find(".clone").remove(),
                slider.container.append(slider.slides.first().clone().addClass("clone").attr("aria-hidden", "true")).prepend(slider.slides.last().clone().addClass("clone").attr("aria-hidden", "true")),
                methods.uniqueID(slider.slides.first().clone().addClass("clone")).appendTo(slider.container),
                methods.uniqueID(slider.slides.last().clone().addClass("clone")).prependTo(slider.container)),
                slider.newSlides = $(slider.vars.selector, slider),
                sliderOffset = reverse ? slider.count - 1 - slider.currentSlide + slider.cloneOffset : slider.currentSlide + slider.cloneOffset,
                vertical && !carousel ? (slider.container.height(200 * (slider.count + slider.cloneCount) + "%").css("position", "absolute").width("100%"),
                setTimeout(function() {
                    slider.newSlides.css({
                        display: "block"
                    }),
                    slider.doMath(),
                    slider.viewport.height(slider.h),
                    slider.setProps(sliderOffset * slider.h, "init")
                }, "init" === type ? 100 : 0)) : (slider.container.width(200 * (slider.count + slider.cloneCount) + "%"),
                slider.setProps(sliderOffset * slider.computedW, "init"),
                setTimeout(function() {
                    slider.doMath(),
                    slider.newSlides.css({
                        width: slider.computedW,
                        "float": "left",
                        display: "block"
                    }),
                    slider.vars.smoothHeight && methods.smoothHeight()
                }, "init" === type ? 100 : 0))
            }
            carousel || slider.slides.removeClass(namespace + "active-slide").eq(slider.currentSlide).addClass(namespace + "active-slide"),
            slider.vars.init(slider)
        }
        ,
        slider.doMath = function() {
            var slide = slider.slides.first()
              , slideMargin = slider.vars.itemMargin
              , minItems = slider.vars.minItems
              , maxItems = slider.vars.maxItems;
            slider.w = void 0 === slider.viewport ? slider.width() : slider.viewport.width(),
            slider.h = slide.height(),
            slider.boxPadding = slide.outerWidth() - slide.width(),
            carousel ? (slider.itemT = slider.vars.itemWidth + slideMargin,
            slider.minW = minItems ? minItems * slider.itemT : slider.w,
            slider.maxW = maxItems ? maxItems * slider.itemT - slideMargin : slider.w,
            slider.itemW = slider.minW > slider.w ? (slider.w - slideMargin * (minItems - 1)) / minItems : slider.maxW < slider.w ? (slider.w - slideMargin * (maxItems - 1)) / maxItems : slider.vars.itemWidth > slider.w ? slider.w : slider.vars.itemWidth,
            slider.visible = Math.floor(slider.w / slider.itemW),
            slider.move = slider.vars.move > 0 && slider.vars.move < slider.visible ? slider.vars.move : slider.visible,
            slider.pagingCount = Math.ceil((slider.count - slider.visible) / slider.move + 1),
            slider.last = slider.pagingCount - 1,
            slider.limit = 1 === slider.pagingCount ? 0 : slider.vars.itemWidth > slider.w ? slider.itemW * (slider.count - 1) + slideMargin * (slider.count - 1) : (slider.itemW + slideMargin) * slider.count - slider.w - slideMargin) : (slider.itemW = slider.w,
            slider.pagingCount = slider.count,
            slider.last = slider.count - 1),
            slider.computedW = slider.itemW - slider.boxPadding
        }
        ,
        slider.update = function(pos, action) {
            slider.doMath(),
            carousel || (pos < slider.currentSlide ? slider.currentSlide += 1 : pos <= slider.currentSlide && 0 !== pos && (slider.currentSlide -= 1),
            slider.animatingTo = slider.currentSlide),
            slider.vars.controlNav && !slider.manualControls && ("add" === action && !carousel || slider.pagingCount > slider.controlNav.length ? methods.controlNav.update("add") : ("remove" === action && !carousel || slider.pagingCount < slider.controlNav.length) && (carousel && slider.currentSlide > slider.last && (slider.currentSlide -= 1,
            slider.animatingTo -= 1),
            methods.controlNav.update("remove", slider.last))),
            slider.vars.directionNav && methods.directionNav.update()
        }
        ,
        slider.addSlide = function(obj, pos) {
            var $obj = $(obj);
            slider.count += 1,
            slider.last = slider.count - 1,
            vertical && reverse ? void 0 !== pos ? slider.slides.eq(slider.count - pos).after($obj) : slider.container.prepend($obj) : void 0 !== pos ? slider.slides.eq(pos).before($obj) : slider.container.append($obj),
            slider.update(pos, "add"),
            slider.slides = $(slider.vars.selector + ":not(.clone)", slider),
            slider.setup(),
            slider.vars.added(slider)
        }
        ,
        slider.removeSlide = function(obj) {
            var pos = isNaN(obj) ? slider.slides.index($(obj)) : obj;
            slider.count -= 1,
            slider.last = slider.count - 1,
            isNaN(obj) ? $(obj, slider.slides).remove() : vertical && reverse ? slider.slides.eq(slider.last).remove() : slider.slides.eq(obj).remove(),
            slider.doMath(),
            slider.update(pos, "remove"),
            slider.slides = $(slider.vars.selector + ":not(.clone)", slider),
            slider.setup(),
            slider.vars.removed(slider)
        }
        ,
        methods.init()
    }
    ,
    $(window).blur(function() {
        focused = !1
    }).focus(function() {
        focused = !0
    }),
    $.flexslider.defaults = {
        namespace: "flex-",
        selector: ".slides > li",
        animation: "fade",
        easing: "swing",
        direction: "horizontal",
        reverse: !1,
        animationLoop: !0,
        smoothHeight: !1,
        startAt: 0,
        slideshow: !0,
        slideshowSpeed: 7e3,
        animationSpeed: 600,
        initDelay: 0,
        randomize: !1,
        thumbCaptions: !1,
        pauseOnAction: !0,
        pauseOnHover: !1,
        pauseInvisible: !0,
        useCSS: !0,
        touch: !0,
        video: !1,
        controlNav: !0,
        directionNav: !0,
        prevText: "Previous",
        nextText: "Next",
        keyboard: !0,
        multipleKeyboard: !1,
        mousewheel: !1,
        pausePlay: !1,
        pauseText: "Pause",
        playText: "Play",
        controlsContainer: "",
        manualControls: "",
        sync: "",
        asNavFor: "",
        itemWidth: 0,
        itemMargin: 0,
        minItems: 1,
        maxItems: 0,
        move: 0,
        allowOneSlide: !0,
        start: function() {},
        before: function() {},
        after: function() {},
        end: function() {},
        added: function() {},
        removed: function() {},
        init: function() {}
    },
    $.fn.flexslider = function(options) {
        if (void 0 === options && (options = {}),
        "object" == typeof options)
            return this.each(function() {
                var $this = $(this)
                  , selector = options.selector ? options.selector : ".slides > li"
                  , $slides = $this.find(selector);
                1 === $slides.length && options.allowOneSlide === !0 || 0 === $slides.length ? ($slides.fadeIn(400),
                options.start && options.start($this)) : void 0 === $this.data("flexslider") && new $.flexslider(this,options)
            });
        var $slider = $(this).data("flexslider");
        switch (options) {
        case "play":
            $slider.play();
            break;
        case "pause":
            $slider.pause();
            break;
        case "stop":
            $slider.stop();
            break;
        case "next":
            $slider.flexAnimate($slider.getTarget("next"), !0);
            break;
        case "prev":
        case "previous":
            $slider.flexAnimate($slider.getTarget("prev"), !0);
            break;
        default:
            "number" == typeof options && $slider.flexAnimate(options, !0)
        }
    }
}(jQuery),
window.Modernizr = function(window, document, undefined) {
    function setCss(str) {
        mStyle.cssText = str
    }
    function setCssAll(str1, str2) {
        return setCss(prefixes.join(str1 + ";") + (str2 || ""))
    }
    function is(obj, type) {
        return typeof obj === type
    }
    function contains(str, substr) {
        return !!~("" + str).indexOf(substr)
    }
    function testProps(props, prefixed) {
        for (var i in props) {
            var prop = props[i];
            if (!contains(prop, "-") && mStyle[prop] !== undefined)
                return "pfx" == prefixed ? prop : !0
        }
        return !1
    }
    function testDOMProps(props, obj, elem) {
        for (var i in props) {
            var item = obj[props[i]];
            if (item !== undefined)
                return elem === !1 ? props[i] : is(item, "function") ? item.bind(elem || obj) : item
        }
        return !1
    }
    function testPropsAll(prop, prefixed, elem) {
        var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1)
          , props = (prop + " " + cssomPrefixes.join(ucProp + " ") + ucProp).split(" ");
        return is(prefixed, "string") || is(prefixed, "undefined") ? testProps(props, prefixed) : (props = (prop + " " + domPrefixes.join(ucProp + " ") + ucProp).split(" "),
        testDOMProps(props, prefixed, elem))
    }
    function webforms() {
        Modernizr.input = function(props) {
            for (var i = 0, len = props.length; len > i; i++)
                attrs[props[i]] = !!(props[i]in inputElem);
            return attrs.list && (attrs.list = !(!document.createElement("datalist") || !window.HTMLDataListElement)),
            attrs
        }("autocomplete autofocus list placeholder max min multiple pattern required step".split(" ")),
        Modernizr.inputtypes = function(props) {
            for (var bool, inputElemType, defaultView, i = 0, len = props.length; len > i; i++)
                inputElem.setAttribute("type", inputElemType = props[i]),
                bool = "text" !== inputElem.type,
                bool && (inputElem.value = smile,
                inputElem.style.cssText = "position:absolute;visibility:hidden;",
                /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ? (docElement.appendChild(inputElem),
                defaultView = document.defaultView,
                bool = defaultView.getComputedStyle && "textfield" !== defaultView.getComputedStyle(inputElem, null ).WebkitAppearance && 0 !== inputElem.offsetHeight,
                docElement.removeChild(inputElem)) : /^(search|tel)$/.test(inputElemType) || (bool = /^(url|email)$/.test(inputElemType) ? inputElem.checkValidity && inputElem.checkValidity() === !1 : inputElem.value != smile)),
                inputs[props[i]] = !!bool;
            return inputs
        }("search tel url email datetime date month week time datetime-local number range color".split(" "))
    }
    var featureName, hasOwnProp, version = "2.8.3", Modernizr = {}, enableClasses = !0, docElement = document.documentElement, mod = "modernizr", modElem = document.createElement(mod), mStyle = modElem.style, inputElem = document.createElement("input"), smile = ":)", toString = {}.toString, prefixes = " -webkit- -moz- -o- -ms- ".split(" "), omPrefixes = "Webkit Moz O ms", cssomPrefixes = omPrefixes.split(" "), domPrefixes = omPrefixes.toLowerCase().split(" "), ns = {
        svg: "http://www.w3.org/2000/svg"
    }, tests = {}, inputs = {}, attrs = {}, classes = [], slice = classes.slice, injectElementWithStyles = function(rule, callback, nodes, testnames) {
        var style, ret, node, docOverflow, div = document.createElement("div"), body = document.body, fakeBody = body || document.createElement("body");
        if (parseInt(nodes, 10))
            for (; nodes--; )
                node = document.createElement("div"),
                node.id = testnames ? testnames[nodes] : mod + (nodes + 1),
                div.appendChild(node);
        return style = ["&#173;", '<style id="s', mod, '">', rule, "</style>"].join(""),
        div.id = mod,
        (body ? div : fakeBody).innerHTML += style,
        fakeBody.appendChild(div),
        body || (fakeBody.style.background = "",
        fakeBody.style.overflow = "hidden",
        docOverflow = docElement.style.overflow,
        docElement.style.overflow = "hidden",
        docElement.appendChild(fakeBody)),
        ret = callback(div, rule),
        body ? div.parentNode.removeChild(div) : (fakeBody.parentNode.removeChild(fakeBody),
        docElement.style.overflow = docOverflow),
        !!ret
    }
    , testMediaQuery = function(mq) {
        var matchMedia = window.matchMedia || window.msMatchMedia;
        if (matchMedia)
            return matchMedia(mq) && matchMedia(mq).matches || !1;
        var bool;
        return injectElementWithStyles("@media " + mq + " { #" + mod + " { position: absolute; } }", function(node) {
            bool = "absolute" == (window.getComputedStyle ? getComputedStyle(node, null ) : node.currentStyle).position
        }),
        bool
    }
    , isEventSupported = function() {
        function isEventSupported(eventName, element) {
            element = element || document.createElement(TAGNAMES[eventName] || "div"),
            eventName = "on" + eventName;
            var isSupported = eventName in element;
            return isSupported || (element.setAttribute || (element = document.createElement("div")),
            element.setAttribute && element.removeAttribute && (element.setAttribute(eventName, ""),
            isSupported = is(element[eventName], "function"),
            is(element[eventName], "undefined") || (element[eventName] = undefined),
            element.removeAttribute(eventName))),
            element = null ,
            isSupported
        }
        var TAGNAMES = {
            select: "input",
            change: "input",
            submit: "form",
            reset: "form",
            error: "img",
            load: "img",
            abort: "img"
        };
        return isEventSupported
    }(), _hasOwnProperty = {}.hasOwnProperty;
    hasOwnProp = is(_hasOwnProperty, "undefined") || is(_hasOwnProperty.call, "undefined") ? function(object, property) {
        return property in object && is(object.constructor.prototype[property], "undefined")
    }
    : function(object, property) {
        return _hasOwnProperty.call(object, property)
    }
    ,
    Function.prototype.bind || (Function.prototype.bind = function(that) {
        var target = this;
        if ("function" != typeof target)
            throw new TypeError;
        var args = slice.call(arguments, 1)
          , bound = function() {
            if (this instanceof bound) {
                var F = function() {}
                ;
                F.prototype = target.prototype;
                var self = new F
                  , result = target.apply(self, args.concat(slice.call(arguments)));
                return Object(result) === result ? result : self
            }
            return target.apply(that, args.concat(slice.call(arguments)))
        }
        ;
        return bound
    }
    ),
    tests.flexbox = function() {
        return testPropsAll("flexWrap")
    }
    ,
    tests.flexboxlegacy = function() {
        return testPropsAll("boxDirection")
    }
    ,
    tests.canvas = function() {
        var elem = document.createElement("canvas");
        return !(!elem.getContext || !elem.getContext("2d"))
    }
    ,
    tests.canvastext = function() {
        return !(!Modernizr.canvas || !is(document.createElement("canvas").getContext("2d").fillText, "function"))
    }
    ,
    tests.webgl = function() {
        return !!window.WebGLRenderingContext
    }
    ,
    tests.touch = function() {
        var bool;
        return "ontouchstart"in window || window.DocumentTouch && document instanceof DocumentTouch ? bool = !0 : injectElementWithStyles(["@media (", prefixes.join("touch-enabled),("), mod, ")", "{#modernizr{top:9px;position:absolute}}"].join(""), function(node) {
            bool = 9 === node.offsetTop
        }),
        bool
    }
    ,
    tests.geolocation = function() {
        return "geolocation"in navigator
    }
    ,
    tests.postmessage = function() {
        return !!window.postMessage
    }
    ,
    tests.websqldatabase = function() {
        return !!window.openDatabase
    }
    ,
    tests.indexedDB = function() {
        return !!testPropsAll("indexedDB", window)
    }
    ,
    tests.hashchange = function() {
        return isEventSupported("hashchange", window) && (document.documentMode === undefined || document.documentMode > 7)
    }
    ,
    tests.history = function() {
        return !(!window.history || !history.pushState)
    }
    ,
    tests.draganddrop = function() {
        var div = document.createElement("div");
        return "draggable"in div || "ondragstart"in div && "ondrop"in div
    }
    ,
    tests.websockets = function() {
        return "WebSocket"in window || "MozWebSocket"in window
    }
    ,
    tests.rgba = function() {
        return setCss("background-color:rgba(150,255,150,.5)"),
        contains(mStyle.backgroundColor, "rgba")
    }
    ,
    tests.hsla = function() {
        return setCss("background-color:hsla(120,40%,100%,.5)"),
        contains(mStyle.backgroundColor, "rgba") || contains(mStyle.backgroundColor, "hsla")
    }
    ,
    tests.multiplebgs = function() {
        return setCss("background:url(https://),url(https://),red url(https://)"),
        /(url\s*\(.*?){3}/.test(mStyle.background)
    }
    ,
    tests.backgroundsize = function() {
        return testPropsAll("backgroundSize")
    }
    ,
    tests.borderimage = function() {
        return testPropsAll("borderImage")
    }
    ,
    tests.borderradius = function() {
        return testPropsAll("borderRadius")
    }
    ,
    tests.boxshadow = function() {
        return testPropsAll("boxShadow")
    }
    ,
    tests.textshadow = function() {
        return "" === document.createElement("div").style.textShadow
    }
    ,
    tests.opacity = function() {
        return setCssAll("opacity:.55"),
        /^0.55$/.test(mStyle.opacity)
    }
    ,
    tests.cssanimations = function() {
        return testPropsAll("animationName")
    }
    ,
    tests.csscolumns = function() {
        return testPropsAll("columnCount")
    }
    ,
    tests.cssgradients = function() {
        var str1 = "background-image:"
          , str2 = "gradient(linear,left top,right bottom,from(#9f9),to(white));"
          , str3 = "linear-gradient(left top,#9f9, white);";
        return setCss((str1 + "-webkit- ".split(" ").join(str2 + str1) + prefixes.join(str3 + str1)).slice(0, -str1.length)),
        contains(mStyle.backgroundImage, "gradient")
    }
    ,
    tests.cssreflections = function() {
        return testPropsAll("boxReflect")
    }
    ,
    tests.csstransforms = function() {
        return !!testPropsAll("transform")
    }
    ,
    tests.csstransforms3d = function() {
        var ret = !!testPropsAll("perspective");
        return ret && "webkitPerspective"in docElement.style && injectElementWithStyles("@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}", function(node) {
            ret = 9 === node.offsetLeft && 3 === node.offsetHeight
        }),
        ret
    }
    ,
    tests.csstransitions = function() {
        return testPropsAll("transition")
    }
    ,
    tests.fontface = function() {
        var bool;
        return injectElementWithStyles('@font-face {font-family:"font";src:url("https://")}', function(node, rule) {
            var style = document.getElementById("smodernizr")
              , sheet = style.sheet || style.styleSheet
              , cssText = sheet ? sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || "" : "";
            bool = /src/i.test(cssText) && 0 === cssText.indexOf(rule.split(" ")[0])
        }),
        bool
    }
    ,
    tests.generatedcontent = function() {
        var bool;
        return injectElementWithStyles(["#", mod, "{font:0/0 a}#", mod, ':after{content:"', smile, '";visibility:hidden;font:3px/1 a}'].join(""), function(node) {
            bool = node.offsetHeight >= 3
        }),
        bool
    }
    ,
    tests.video = function() {
        var elem = document.createElement("video")
          , bool = !1;
        try {
            (bool = !!elem.canPlayType) && (bool = new Boolean(bool),
            bool.ogg = elem.canPlayType('video/ogg; codecs="theora"').replace(/^no$/, ""),
            bool.h264 = elem.canPlayType('video/mp4; codecs="avc1.42E01E"').replace(/^no$/, ""),
            bool.webm = elem.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/^no$/, ""))
        } catch (e) {}
        return bool
    }
    ,
    tests.audio = function() {
        var elem = document.createElement("audio")
          , bool = !1;
        try {
            (bool = !!elem.canPlayType) && (bool = new Boolean(bool),
            bool.ogg = elem.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""),
            bool.mp3 = elem.canPlayType("audio/mpeg;").replace(/^no$/, ""),
            bool.wav = elem.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""),
            bool.m4a = (elem.canPlayType("audio/x-m4a;") || elem.canPlayType("audio/aac;")).replace(/^no$/, ""))
        } catch (e) {}
        return bool
    }
    ,
    tests.localstorage = function() {
        try {
            return localStorage.setItem(mod, mod),
            localStorage.removeItem(mod),
            !0
        } catch (e) {
            return !1
        }
    }
    ,
    tests.sessionstorage = function() {
        try {
            return sessionStorage.setItem(mod, mod),
            sessionStorage.removeItem(mod),
            !0
        } catch (e) {
            return !1
        }
    }
    ,
    tests.webworkers = function() {
        return !!window.Worker
    }
    ,
    tests.applicationcache = function() {
        return !!window.applicationCache
    }
    ,
    tests.svg = function() {
        return !!document.createElementNS && !!document.createElementNS(ns.svg, "svg").createSVGRect
    }
    ,
    tests.inlinesvg = function() {
        var div = document.createElement("div");
        return div.innerHTML = "<svg/>",
        (div.firstChild && div.firstChild.namespaceURI) == ns.svg
    }
    ,
    tests.smil = function() {
        return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg, "animate")))
    }
    ,
    tests.svgclippaths = function() {
        return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg, "clipPath")))
    }
    ;
    for (var feature in tests)
        hasOwnProp(tests, feature) && (featureName = feature.toLowerCase(),
        Modernizr[featureName] = tests[feature](),
        classes.push((Modernizr[featureName] ? "" : "no-") + featureName));
    return Modernizr.input || webforms(),
    Modernizr.addTest = function(feature, test) {
        if ("object" == typeof feature)
            for (var key in feature)
                hasOwnProp(feature, key) && Modernizr.addTest(key, feature[key]);
        else {
            if (feature = feature.toLowerCase(),
            Modernizr[feature] !== undefined)
                return Modernizr;
            test = "function" == typeof test ? test() : test,
            "undefined" != typeof enableClasses && enableClasses && (docElement.className += " " + (test ? "" : "no-") + feature),
            Modernizr[feature] = test
        }
        return Modernizr
    }
    ,
    setCss(""),
    modElem = inputElem = null ,
    function(window, document) {
        function addStyleSheet(ownerDocument, cssText) {
            var p = ownerDocument.createElement("p")
              , parent = ownerDocument.getElementsByTagName("head")[0] || ownerDocument.documentElement;
            return p.innerHTML = "x<style>" + cssText + "</style>",
            parent.insertBefore(p.lastChild, parent.firstChild)
        }
        function getElements() {
            var elements = html5.elements;
            return "string" == typeof elements ? elements.split(" ") : elements
        }
        function getExpandoData(ownerDocument) {
            var data = expandoData[ownerDocument[expando]];
            return data || (data = {},
            expanID++,
            ownerDocument[expando] = expanID,
            expandoData[expanID] = data),
            data
        }
        function createElement(nodeName, ownerDocument, data) {
            if (ownerDocument || (ownerDocument = document),
            supportsUnknownElements)
                return ownerDocument.createElement(nodeName);
            data || (data = getExpandoData(ownerDocument));
            var node;
            return node = data.cache[nodeName] ? data.cache[nodeName].cloneNode() : saveClones.test(nodeName) ? (data.cache[nodeName] = data.createElem(nodeName)).cloneNode() : data.createElem(nodeName),
            !node.canHaveChildren || reSkip.test(nodeName) || node.tagUrn ? node : data.frag.appendChild(node)
        }
        function createDocumentFragment(ownerDocument, data) {
            if (ownerDocument || (ownerDocument = document),
            supportsUnknownElements)
                return ownerDocument.createDocumentFragment();
            data = data || getExpandoData(ownerDocument);
            for (var clone = data.frag.cloneNode(), i = 0, elems = getElements(), l = elems.length; l > i; i++)
                clone.createElement(elems[i]);
            return clone
        }
        function shivMethods(ownerDocument, data) {
            data.cache || (data.cache = {},
            data.createElem = ownerDocument.createElement,
            data.createFrag = ownerDocument.createDocumentFragment,
            data.frag = data.createFrag()),
            ownerDocument.createElement = function(nodeName) {
                return html5.shivMethods ? createElement(nodeName, ownerDocument, data) : data.createElem(nodeName)
            }
            ,
            ownerDocument.createDocumentFragment = Function("h,f", "return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(" + getElements().join().replace(/[\w\-]+/g, function(nodeName) {
                return data.createElem(nodeName),
                data.frag.createElement(nodeName),
                'c("' + nodeName + '")'
            }) + ");return n}")(html5, data.frag)
        }
        function shivDocument(ownerDocument) {
            ownerDocument || (ownerDocument = document);
            var data = getExpandoData(ownerDocument);
            return !html5.shivCSS || supportsHtml5Styles || data.hasCSS || (data.hasCSS = !!addStyleSheet(ownerDocument, "article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}template{display:none}")),
            supportsUnknownElements || shivMethods(ownerDocument, data),
            ownerDocument
        }
        var supportsHtml5Styles, supportsUnknownElements, version = "3.7.0", options = window.html5 || {}, reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i, saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i, expando = "_html5shiv", expanID = 0, expandoData = {};
        !function() {
            try {
                var a = document.createElement("a");
                a.innerHTML = "<xyz></xyz>",
                supportsHtml5Styles = "hidden"in a,
                supportsUnknownElements = 1 == a.childNodes.length || function() {
                    document.createElement("a");
                    var frag = document.createDocumentFragment();
                    return "undefined" == typeof frag.cloneNode || "undefined" == typeof frag.createDocumentFragment || "undefined" == typeof frag.createElement
                }()
            } catch (e) {
                supportsHtml5Styles = !0,
                supportsUnknownElements = !0
            }
        }();
        var html5 = {
            elements: options.elements || "abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video",
            version: version,
            shivCSS: options.shivCSS !== !1,
            supportsUnknownElements: supportsUnknownElements,
            shivMethods: options.shivMethods !== !1,
            type: "default",
            shivDocument: shivDocument,
            createElement: createElement,
            createDocumentFragment: createDocumentFragment
        };
        window.html5 = html5,
        shivDocument(document)
    }(this, document),
    Modernizr._version = version,
    Modernizr._prefixes = prefixes,
    Modernizr._domPrefixes = domPrefixes,
    Modernizr._cssomPrefixes = cssomPrefixes,
    Modernizr.mq = testMediaQuery,
    Modernizr.hasEvent = isEventSupported,
    Modernizr.testProp = function(prop) {
        return testProps([prop])
    }
    ,
    Modernizr.testAllProps = testPropsAll,
    Modernizr.testStyles = injectElementWithStyles,
    Modernizr.prefixed = function(prop, obj, elem) {
        return obj ? testPropsAll(prop, obj, elem) : testPropsAll(prop, "pfx")
    }
    ,
    docElement.className = docElement.className.replace(/(^|\s)no-js(\s|$)/, "$1$2") + (enableClasses ? " js " + classes.join(" ") : ""),
    Modernizr
}(this, this.document),
$(document).ready(function() {
    $(".js-expand").each(function(index, element) {
        $(element).parent().is(".accordion, .card-content, .card-details") ? ($(element).addClass("js-enabled").not(".is-closed").toggleClass("is-closed"),
        $(element).children(".ex-handle").click(function(e) {
            e.preventDefault(),
            $(this).parent().toggleClass("is-closed is-open")
        })) : $(element).hasClass("nav-main") ? ($(element).addClass("js-enabled").not(".is-closed").toggleClass("is-closed"),
        $(element).click(function() {
            $(this).toggleClass("is-closed is-open")
        })) : $(element).click(function(e) {
            e.preventDefault(),
            $(this).toggleClass("is-closed is-open")
        })
    })
}),
$(document).ready(function() {
    function featherlightVideoSwitcher(width) {
        width >= 768 ? $featherlightItems.each(function() {
            this.featherlightHTML = '<span data-featherlight=".js-featherlight-switch" class="js-featherlight-switch"><img src="' + this.videoImage + '" class="full-width" alt="Play video" /></span>',
            $(this).html(this.featherlightHTML),
            $(this).featherlight({
                iframe: this.videoSrc,
                root: this,
                iframeWidth: 700,
                iframeHeight: 429
            })
        }) : 768 > width && $featherlightItems.each(function() {
            $(this).html(this.baseHTML),
            $(this).hasClass("js-fitvid") && $(this).fitVids()
        })
    }
    var $featherlightItems = $(".js-featherlight");
    $featherlightItems.each(function() {
        var videoSources = ['iframe[src*="player.vimeo.com"]', 'iframe[src*="www.youtube.com"]', 'iframe[src*="youtube-nocookie.com"]']
          , $videoObj = $(this).find(videoSources.join(","));
        this.baseHTML = this.innerHTML,
        $videoObj && (this.videoImage = $(this).data("image"),
        this.videoSrc = $videoObj.attr("src"))
    }),
    featherlightVideoSwitcher(window.innerWidth),
    $(window).resize(debounce(function() {
        featherlightVideoSwitcher(window.innerWidth)
    }, 500))
}),
$(document).ready(function() {
    $(".js-fitvid").fitVids()
}),
$(window).load(function() {
    $(".flexslider").flexslider({
        controlNav: !1,
        startAt: 1,
        animation: "slide"
    })
}),
$(document).ready(function() {
    $("a.tracker").click(function() {
        _gaq.push(["_trackPageview", "/outgoing/" + $(this).attr("href")])
    })
}),
$(function() {
    $(".pullquote").each(function() {
        var $parentObject = $(this).parent();
        $parentObject.css("position", "relative"),
        $(this).clone().addClass("pulledquote").removeClass("pullquote").prependTo($parentObject),
        $(this).removeClass().addClass("pullquote")
    })
}),
$(document).ready(function() {
    function origOffset(items) {
        items.each(function(index) {
            origOffsetY[index] = $(this).offset().top
        })
    }
    function stickEm(items) {
        return origOffsetY[0] || origOffset(items),
        items.each(function(index) {
            $(window).scrollTop() > origOffsetY[index] ? $(this).addClass("fixed") : $(this).removeClass("fixed")
        })
    }
    var stickyItems = $(".js-sticky")
      , origOffsetY = [];
    stickEm(stickyItems),
    $(window).scroll(debounce(function() {
        stickEm(stickyItems)
    }, 10)),
    $(window).resize(debounce(function() {
        stickyItems.each(function() {
            $(this).removeClass("fixed")
        }),
        origOffset(stickyItems),
        stickEm(stickyItems)
    }, 500))
});
